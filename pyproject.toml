[project]
name = "tcm-knowledge-system"
version = "0.1.0"
description = "Traditional Chinese Medicine Knowledge Graph System"
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
authors = [
    { name = "TCM Knowledge Systems Team" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Healthcare Industry",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "networkx>=3.2",
    "pandas>=2.2.0",
    "pydantic>=2.6.0",
    "PyMuPDF>=1.23.0",         # For PDF processing
    "spacy>=3.7.0",            # For text processing
    "rdflib>=7.0.0",           # For knowledge graph serialization
    "pytest>=8.0.0",           # For testing
    "openai>=1.59.7",          # For GPT-3 integration
    "anthropic>=0.42.0",       # For Claude integration
    "sentence-transformers>=2.5.0",  # For text embeddings
    "torch>=2.2.0",            # For neural components
    "scikit-learn>=1.4.0",     # For similarity calculations
    "transformers>=4.38.0",    # For NLP tasks
    "nltk>=3.8.1",             # For text processing
    "fastapi>=0.110.0",        # For API endpoints
    "uvicorn>=0.27.0",         # For serving API
    "python-multipart>=0.0.9", # For file uploads
]

[project.optional-dependencies]
dev = [
    "black>=24.0.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.23.0",  # For async test support
    "httpx>=0.27.0",          # For API testing
]

[project.scripts]
tcm-build-graph = "tcm.scripts.build_graph:main"
tcm-validate-graph = "tcm.scripts.validate_graph:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/tcm"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]
asyncio_mode = "auto"  # For async tests

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = [
    "pydantic.mypy"
]

[tool.black]
line-length = 88
target-version = ['py312']

[tool.isort]
profile = "black"
multi_line_output = 3